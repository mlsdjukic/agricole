openapi: 3.0.3
info:
  title: Action API
  description: API for creating and managing different types of actions with rules
  version: 1.0.0
paths:
  /jobs:
    post:
      summary: Create a new action
      description: Creates a new action with specific parameters and rules
      operationId: createAction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
      responses:
        '201':
          description: Action created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
components:
  schemas:
    Action:
      type: object
      required:
        - type
        - params
        - rules
      properties:
        type:
          type: string
          description: The type of action to create
          example: EwsAction
          enum:
            - EwsAction
            - GmailAction
            # Add other action types as needed
        params:
          type: object
          description: Parameters specific to the action type
          oneOf:
            - $ref: '#/components/schemas/EwsActionParams'
            - $ref: '#/components/schemas/GmailActionParams'
            # Add other parameter schemas as needed
        rules:
          type: array
          description: Rules to apply for this action
          minItems: 1
          items:
            $ref: '#/components/schemas/Rule'

    EwsActionParams:
      type: object
      required:
        - ews_url
        - username
        - password
      properties:
        ews_url:
          type: string
          format: uri
        interval:
          type: integer
          minimum: 1
          description: Interval in minutes
          example: 1
        username:
          type: string
        password:
          type: string
          format: password

    GmailActionParams:
      type: object
      required:
        - username
        - password
        - interval
      properties:
        username:
          type: string
          example: "123456789-abc123def456.apps.googleusercontent.com"
        password:
          type: string
          format: password
          example: "GOCSPX-abc123def456"
        interval:
          type: integer
          minimum: 1
          description: Interval in minutes
          example: 5

    Rule:
      type: object
      required:
        - name
        - definition
        - reactions
      properties:
        name:
          type: string
          description: Name of the rule defining its behavior
          enum:
            - FindPatternInEws
            # Add other rule types as needed
          example: FindPatternInEws
        definition:
          type: object
          description: Definition specific to the rule type
          discriminator:
            propertyName: name
          oneOf:
            - $ref: '#/components/schemas/FindPatternInEwsDefinition'
            # Add other rule definition schemas as needed
        reactions:
          type: array
          description: Reactions to trigger when rule conditions are met
          items:
            $ref: '#/components/schemas/Reaction'
          # Array can be empty but must be present

    FindPatternInEwsDefinition:
      type: object
      required:
        - pattern
        - interval
        - repetition
        - alarm_message
        - location
      properties:
        pattern:
          type: string
          description: Pattern to search for
          example: "test email"
        interval:
          type: integer
          minimum: 1
          description: Interval in seconds
          example: 60
        repetition:
          type: integer
          minimum: 1
          description: Number of repetitions before triggering
          example: 1
        alarm_message:
          type: string
          description: Message to display when pattern is found
          example: "pattern found"
        location:
          type: string
          description: Where to search for the pattern
          enum:
            - body
            - subject
            - sender
          example: "body"

    Reaction:
      type: object
      description: Definition of a reaction to a rule match
      required:
        - name
        - params
      properties:
        name:
          type: string
          description: The type of reaction to trigger
          example: SendEmailReaction
          enum:
            - SendEmailReaction
            # Add other reaction types as needed
        params:
          type: object
          description: Parameters specific to the reaction type
          oneOf:
            - $ref: '#/components/schemas/SendEmailReactionParams'
            # Add other reaction parameter schemas as needed

    SendEmailReactionParams:
      type: object
      required:
        - email_address
      properties:
        email_address:
          type: string
          format: email
          example: "user@example.com"

    ActionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          enum:
            - created
            - active
            - error
          example: "created"
        created_at:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request parameters"
        message:
          type: string
          example: "Rules array cannot be empty"
        status:
          type: integer
          example: 400